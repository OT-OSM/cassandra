---
- name: Create Cassandra Group
  group:
    name: "{{ group_name }}"
    state: present

- name: Create Cassandra User
  user:
    name: "{{ user_name }}"
    state: present
    group: "{{ group_name }}"
    shell: /sbin/nologin

- name: Installing Python 2.7 If not installed 
  apt:
    name: python
    state: present
    update_cache: yes

- name: Include swap setup tasks
  include_tasks: swap.yml
 
- name: check cassandra source file
  stat: 
    path: /tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz
  register: cassandra_source_file
  
- name: download the source
  get_url: 
    url: "{{ cassandra_basic_url }}{{ cassandra_download_url }}"
    dest: /tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755
  when: cassandra_source_file.stat.exists == False
  
- name: Create home directory
  file: 
    path: "{{ cassandra_home }}"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755

- name: Extract cassandra source
  unarchive:
    src: /tmp/apache-cassandra-{{ cassandra_version }}-bin.tar.gz
    dest: "{{ cassandra_home }}"
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: Creating Cassandra data Dir
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755
  with_items:
    - "{{ cassandra_data_directory }}"
    - "{{ cassandra_hints_directory }}"
    - "{{ cassandra_commitlog_directory }}"
    - "{{ cassandra_saved_caches_directory }}" 
    
- name: Export path
  shell: "echo 'PATH=$PATH:{{ cassandra_path }}' > /etc/profile.d/custom-path.sh && . /etc/profile.d/custom-path.sh"
  
- name: install the configuration file
  template: 
    src: cassandra.yaml.j2 
    dest: '{{ cassandra_home }}/conf/cassandra.yaml'
    owner: "{{ user_name }}"
    group: "{{ group_name }}"
    mode: 0755
  
- name: copy the startup script
  template: 
    src: cassandra.sh
    dest: /etc/init.d/cassandra 
    owner: root
    group: root
    mode: 0755
  # notify: 
  #   - stop cassandra service
  #   - start cassandra service
     
- name: Enable the daemon
  shell: update-rc.d cassandra "{{ item }}"
  with_items:
    - "defaults"
    - "enable"

- name: stop cassandra service
  service:
    name: cassandra 
    state: stopped
    
- name: start cassandra service
  service:
    name: cassandra 
    state: started

#- name: flush handlers
#-  meta: flush_handlers
      #- stop cassandra service
      #- start cassandra service

- name: Include cluster status check
  include_tasks: cluster_status.yml

- name: Include authorization setup tasks
  include_tasks: authorization.yml
  when: authorization_enable == 'yes'